[package]
authors = ["Andres Vahter <andres@vahter.me>"]
name = "rtic_arbiter_demo"
edition = "2021"
version = "0.1.0"

[lib]
harness = false


[dependencies]
cortex-m = { version = "0.7", features = ["critical-section-single-core"] }
cortex-m-rt = "0.7"
critical-section = "1.1"
defmt = "0.3"
defmt-rtt = "0.4"
panic-probe = { version = "0.3", features = ["print-defmt"] }
rtic = { version = "2.0.1", features = ["thumbv7-backend"] }
rtic-sync = { version = "1.2", features = ["unstable"] }
rtic-monotonics = { version = "1.5", features = ["stm32f405rg", "stm32_tim2"] }
embedded-hal-async = "1.0"
embassy-stm32 = { git = "https://github.com/embassy-rs/embassy.git", rev = "c580d4c490239762b6e68ee9e25599bfe86ed926", features = [
    "defmt",
    "stm32f405rg",
    "unstable-pac",
    "exti",
] }
ens160 = { git = "https://github.com/andresv/ens160.git", branch = "eh1", default-features = false, features = [
    "async",
] }

# this lets you use `cargo fix`!
[[bin]]
name = "rtic_arbiter_demo"
path = "src/main.rs"
test = false
bench = false

# cargo build/run
[profile.dev]
codegen-units = 1
debug = 2
debug-assertions = true # <-
incremental = false
opt-level = 'z'         # <-
overflow-checks = true  # <-

# cargo test
[profile.test]
codegen-units = 1
debug = 2
debug-assertions = true # <-
incremental = false
opt-level = 3           # <-
overflow-checks = true  # <-

# cargo build/run --release
[profile.release]
codegen-units = 1
debug = 2
debug-assertions = false # <-
incremental = false
lto = 'fat'
opt-level = 'z'          # <-
overflow-checks = false  # <-

# cargo test --release
[profile.bench]
codegen-units = 1
debug = 2
debug-assertions = false # <-
incremental = false
lto = 'fat'
opt-level = 3            # <-
overflow-checks = false  # <-
